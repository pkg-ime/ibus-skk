/* libutil.h generated by valac 0.14.0, the Vala compiler, do not modify */


#ifndef __LIBUTIL_H__
#define __LIBUTIL_H__

#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <ibus.h>

G_BEGIN_DECLS


#define TYPE_PREFERENCES (preferences_get_type ())
#define PREFERENCES(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PREFERENCES, Preferences))
#define PREFERENCES_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_PREFERENCES, PreferencesClass))
#define IS_PREFERENCES(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PREFERENCES))
#define IS_PREFERENCES_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_PREFERENCES))
#define PREFERENCES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PREFERENCES, PreferencesClass))

typedef struct _Preferences Preferences;
typedef struct _PreferencesClass PreferencesClass;
typedef struct _PreferencesPrivate PreferencesPrivate;

#define TYPE_PLIST (plist_get_type ())
#define PLIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PLIST, PList))
#define PLIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_PLIST, PListClass))
#define IS_PLIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PLIST))
#define IS_PLIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_PLIST))
#define PLIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PLIST, PListClass))

typedef struct _PList PList;
typedef struct _PListClass PListClass;
typedef struct _PListPrivate PListPrivate;

struct _Preferences {
	GObject parent_instance;
	PreferencesPrivate * priv;
};

struct _PreferencesClass {
	GObjectClass parent_class;
};

typedef enum  {
	PLIST_PARSE_ERROR_FAILED
} PListParseError;
#define PLIST_PARSE_ERROR plist_parse_error_quark ()
struct _PList {
	GObject parent_instance;
	PListPrivate * priv;
};

struct _PListClass {
	GObjectClass parent_class;
};


GType preferences_get_type (void) G_GNUC_CONST;
void preferences_load (Preferences* self);
void preferences_save (Preferences* self);
GVariant* preferences_get (Preferences* self, const gchar* name);
void preferences_set (Preferences* self, const gchar* name, GVariant* value);
Preferences* preferences_new (IBusConfig* config);
Preferences* preferences_construct (GType object_type, IBusConfig* config);
GQuark plist_parse_error_quark (void);
GType plist_get_type (void) G_GNUC_CONST;
gchar* plist_get (PList* self, const gchar* key);
PList* plist_new (const gchar* str, GError** error);
PList* plist_construct (GType object_type, const gchar* str, GError** error);
gchar* plist_escape (const gchar* str);
gchar* plist_to_string (PList* self);


G_END_DECLS

#endif
